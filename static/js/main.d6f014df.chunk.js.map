{"version":3,"sources":["logo.svg","components/Members/Members.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","members","props","map","member","react_default","a","createElement","className","key","id","style","margin","first_name","last_name","onClick","editButtonClick","deleteButtonClick","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inpurOnChangeHandler","event","setState","defineProperty","target","name","value","onSubmitHandler","console","log","preventDefault","buttonDisabled","payload","state","url","formStatus","addMember","concat","memberIdSelected","editMember","axios","post","then","response","toConsumableArray","push","data","catch","error","put","indexMember","findIndex","editButtonHandler","deleteButtonHandler","delete","status","index","splice","_this2","get","_this3","border","Members","onSubmit","type","onChange","disabled","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6f014df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nconst members = (props) => \r\n(props.members.map((member) => \r\n    (<div className=\"col-md-6\" key={member.id}>\r\n    <div className=\"card\" style={{ margin: 10}}>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{member.id}</h5>\r\n        <h5 className=\"card-title\">{member.first_name}</h5>\r\n        <h5 className=\"card-title\">{member.last_name}</h5>\r\n        <button className=\"btn btn-primary\" onClick={()=> props.editButtonClick(member)}>Edit</button>\r\n        <button className=\"btn btn-danger\" onClick={()=> props.deleteButtonClick(member.id)}>Delete</button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n  ))\r\n\r\n  export default members","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'\nimport Members from './components/Members/Members'\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      members:[ ],\n      first_name:\"\",\n      last_name:\"\",\n      buttonDisabled: false,\n      formStatus    : 'create',\n    memberIdSelected: null,\n    };\n  }\n  componentDidMount(){\n    axios\n    .get('https://reqres.in/api/users?page=1')\n    .then( response=> {\n      this.setState({ members: response.data.data });\n    })\n    .catch(error=>{\n      console.log(error)\n    })\n  }\n\n  inpurOnChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value})\n  }\n  onSubmitHandler = event =>{\n    console.log(\"telah tersubmit\")\n    event.preventDefault();\n    this.setState({buttonDisabled: true})\n    var payload = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name\n    }\n    var url = ''\n    if(this.state.formStatus === \"create\"){\n      url = \"https://reqres.in/api/users\"\n      this.addMember(url, payload)\n    }else{\n      url = `https://reqres.in/api/users/${this.state.memberIdSelected}`\n      this.editMember(url, payload)\n    }\n    \n  }\n  addMember = (url, payload) =>{\n    axios.post(url, payload)\n    .then(response => {\n      console.log(response)\n      var members = [...this.state.members]\n      members.push(response.data)\n      this.setState({members, buttonDisabled: false, first_name:\"\", last_name:\"\"})\n\n    })\n    .catch(error => {\n      console.log(error)\n      \n    })\n  }\n \n  editMember = (url, payload) =>{\n    axios.put(url, payload)\n      .then(response => {\n        var members     = [...this.state.members]\n        var indexMember = members.findIndex(member => member.id === this.state.memberIdSelected)\n\n        // mengganti data yang ada dalam state members dan index yang sesuai\n        members[indexMember].first_name = response.data.first_name\n        members[indexMember].last_name  = response.data.last_name\n        this.setState({ \n          members, \n          buttonDisabled: false, \n          first_name: '', \n          last_name: '',\n          formStatus: 'create' \n      })\n    }).catch(error=>{\n      console.log(error)\n    })\n  }\n  editButtonHandler = member => {\n    this.setState({\n      first_name: member.first_name,\n      last_name: member.last_name,\n      formStatus: \"edit\",\n      buttonDisabled: false,\n      memberIdSelected:member.id\n    \n    })\n  }\n  deleteButtonHandler = id => {\n    var url = `https://reqres.in/api/users/${id}`\n    axios.delete(url)\n    .then(response => {\n      if(response.status === 204)\n      var members = [...this.state.members]\n      var index = members.findIndex(member => member.id ===id)\n      members.splice(index, 1)\n      this.setState({members})\n    })\n    .catch(error =>{\n      console.log(error)\n    })\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>codepolitan</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6\" style={{ border : \"1px solid black\"}}>\n            <h2>Member</h2>\n            <div className=\"row\">\n          <Members \n            members={this.state.members}\n            editButtonClick={(member) => this.editButtonHandler(member)}\n            deleteButtonClick={(id) => this.deleteButtonHandler(id)}\n            ></Members>\n          </div>\n          </div>\n          <div className=\"col-md-6\" style={{ border : \"1px solid black\"}}>\n            <h2>Form {this.state.formStatus}</h2>\n            <form onSubmit={this.onSubmitHandler}>\n              <div className=\"form-group\">\n                <label>First Name</label>\n                <input type=\"text\" className=\"form-control\" name=\"first_name\" value={this.state.first_name} onChange={this.inpurOnChangeHandler}/>\n              </div>\n              <div className=\"form-group\">\n                <label>Last Name</label>\n                <input type=\"text\" className=\"form-control\" name=\"last_name\" value={this.state.last_name} onChange={this.inpurOnChangeHandler}/>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\" disabled={this.state.buttonDisabled}>\n                submit\n              </button>\n            </form>\n          </div>          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}